version: "3.7"

services:
  pgdb:
    image: postgres
    restart: always
    container_name: pgdb
    env_file: ./postgres/docker-compose.env
    volumes:
      - ./postgres/postgresDB:/var/lib/postgresql/data
      - ./postgres/postgresInit:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  promotionsrv:
    build:
      context: .
      dockerfile: ./promotion/Dockerfile
      target: Dev
    depends_on:
      - pgdb
      - nats
    container_name: promotionsrvcont
    entrypoint: CompileDaemon --build="go build -o promotionServer ./promotion/server/" --command=./promotionServer
    env_file: ./promotion/docker-compose.env
    volumes:
      - ./promotion/server:/go/src/goTemp/promotion/server
      - ./globalUtils:/go/src/goTemp/globalUtils
    ports:
      - "50051:50051"
  promotioncli:
    build:
      context: .
      dockerfile: ./promotion/DockerfileCli
      target: Dev
    container_name: promotionclicont
    environment:
      - MICRO_SERVER_ADDRESS=":50051"
    entrypoint: CompileDaemon --build="go build -o promotionClient ./promotion/client/" --command=./promotionClient
    volumes:
      - ./promotion/client:/go/src/goTemp/promotion/client
    ports:
      - "50052:50051"
  usersrv:
    build:
      context: .
      dockerfile: ./user/Dockerfile
      target: Dev
    depends_on:
      - pgdb
      - nats
    container_name: usersrvcont
    entrypoint: CompileDaemon --build="go build -o userServer ./user/server/" --command=./userServer
    env_file: ./user/docker-compose.env
    volumes:
      - ./user/server:/go/src/goTemp/user/server
    ports:
      - "50053:50053"
  usercli:
    build:
      context: .
      dockerfile: ./user/DockerfileCli
      target: Dev
    container_name: userclicont
    environment:
      - MICRO_SERVER_ADDRESS=":50053"
    entrypoint: CompileDaemon --build="go build -o userClient ./user/client/" --command=./userClient
    volumes:
      - ./user/client:/go/src/goTemp/user/client
    ports:
      - "50054:50051"
  auditsrv:
    build:
      context: .
      dockerfile: ./audit/Dockerfile
      target: Dev
    depends_on:
      - timescaledb
      - nats
    container_name: auditsrvcont
    entrypoint: CompileDaemon --build="go build -o auditServer ./audit/server/" --command=./auditServer
    env_file: ./audit/docker-compose.env
    volumes:
      - ./audit/server:/go/src/goTemp/audit/server
      - ./globalUtils:/go/src/goTemp/globalUtils
    ports:
      - "50055:50055"
  nats:
    image: nats
    ports:
      - "8222:8222"
      - "4222:4222"
      - "6222:6222"
  timescaledb:
    build:
      context: ./timescaledb
      dockerfile: Dockerfile
    restart: always
    container_name: timescaledb
    env_file: ./timescaledb/docker-compose.env
    volumes:
      - ./timescaledb/timescaleDB:/var/lib/postgresql/data
    ports:
      - "5433:5432"
  arangodb:
    image: arangodb:3.6.4
    container_name: arangodbcont
    env_file: ./arangodb/docker-compose.env
    ports:
      - "8529:8529"
    volumes:
      - ./arangodb/db:/var/lib/arangodb3
      - ./arangodb/apps_db_system:/var/lib/arangodb3-apps/_db/
      - ./arangodb/arangodbinit:/docker-entrypoint-initdb.d